###############################################################################
# setuptools / pip configuration
###############################################################################
[bdist_wheel]
universal = 1

###############################################################################
# flake8 configuration
###############################################################################

[flake8]
max-line-length = 88
select =
    E,
    F,
    W,
    # https://github.com/PyCQA/flake8-bugbear
    B,
    # Opinionated warnings with the exception of line-length
    B90,
    # http://www.pydocstyle.org/en/latest/error_codes.html
    # Docstring whitespace issues
    D2,
    # Multi-line docstring summary should start at the second line, i.e. not
    # the same line as the triple quotes
    D213,
    # Docstring quotes issues
    D3,
    # First word of the docstring should not be "This"
    D404
ignore =
    # Our preferred style is line breaks before binary operators
    # ref: https://github.com/PyCQA/pycodestyle/issues/498
    W503,
    # Allow `== None` for SQLAlchemy queries
    E711,
    # Allow `== True` for SQLAlchemy queries
    E712,
    # flake8-bugbear's B902 attempts to ensure we use `self` for instance
    # methods and `cls` for class methods, but in our codebases it mostly
    # reports false-positives when implementing SQLAlchemy hybrid_properties.
    B902,
    # flake8-bugbear's B903 advises using `collections.namedtuple` for
    # data-only classes. Unfortunately, it doesn't take into account
    # subclassing where the parent class may have methods.
    # Also, use attrs.
    B903,
    # Black will insert a blank line between a function docstring and an inner function
    D202,
    # Our docstring style allows for a multi-line summary, e.g.:
    #
    # """
    # Prevent database use without the appropriate fixture/marker, used
    # automatically.
    #
    # Additional content goes here.
    # """
    D205,
    # Inverse of D213
    D212


###############################################################################
# pytest connfiguration
###############################################################################

[tool:pytest]
addopts = --strict -ra --tb=short -v --ansible-host-pattern=localhost,
xfail_strict = true
testpaths = tests
filterwarnings =
    # Show any DeprecationWarnings once
    once::DeprecationWarning
    once::PendingDeprecationWarning


###############################################################################
# coverage.py configuration
###############################################################################

[coverage:run]
source =
    ansible_cached_lookup,
    tests
branch = True
parallel = True

[coverage:report]
# Regexes for lines to exclude from consideration
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain if tests don't hit defensive assertion code:
    raise NotImplementedError

    # Don't complain if non-runnable code isn't run
    if __name__ == .__main__.:

    # Don't complain about uncovered code in tests that were supposed to fail
    @pytest.mark.xfail

# Always show line numbers of uncovered statements
show_missing = True


###############################################################################
# isort configuration
###############################################################################

[isort]
# Only change a file if the result has correct Python syntax
atomic = True

# Paths to ignore
skip =
    .git,
    .tox

# Sort `__init__.py`s unless they contain an `# isort:skip_file` comment
not_skip = __init__.py

# Non-stdlib and non-GoodRx code will be treated as third-party
default_section = THIRDPARTY

# GoodRx modules/libraries
known_first_party =
    ansible_cached_lookup,
    tests

# Multiple imports from a single module will go on separate lines
force_single_line = True

# Sort alphabetically within each module rather than by type (e.g. class/function)
force_sort_within_sections = True
order_by_type = False

# Longest line-length allowed for a single import. Try to keep this in sync
# with max-line-length in the flake8 config
line_length = 88
